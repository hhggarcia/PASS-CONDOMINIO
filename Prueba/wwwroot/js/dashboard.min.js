!(function (l) {
    "use strict";
    l("#sidebarToggle, #sidebarToggleTop").on("click", function (e) {
      l("body").toggleClass("sidebar-toggled"),
        l(".sidebar").toggleClass("toggled"),
        l(".sidebar").hasClass("toggled") &&
          l(".sidebar .collapse").collapse("hide");
    }),
      l(window).resize(function () {
        l(window).width() < 768 && l(".sidebar .collapse").collapse("hide"),
          l(window).width() < 480 &&
            !l(".sidebar").hasClass("toggled") &&
            (l("body").addClass("sidebar-toggled"),
            l(".sidebar").addClass("toggled"),
            l(".sidebar .collapse").collapse("hide"));
      }),
      l("body.fixed-nav .sidebar").on(
        "mousewheel DOMMouseScroll wheel",
        function (e) {
          var o;
          768 < l(window).width() &&
            ((o = (o = e.originalEvent).wheelDelta || -o.detail),
            (this.scrollTop += 30 * (o < 0 ? 1 : -1)),
            e.preventDefault());
        }
      ),
      l(document).on("scroll", function () {
        100 < l(this).scrollTop()
          ? l(".scroll-to-top").fadeIn()
          : l(".scroll-to-top").fadeOut();
      }),
      l(document).on("click", "a.scroll-to-top", function (e) {
        var o = l(this);
        l("html, body")
          .stop()
          .animate(
            { scrollTop: l(o.attr("href")).offset().top },
            1e3,
            "easeInOutExpo"
          ),
          e.preventDefault();
      });
  })(jQuery);



/**
 * Define a function to navigate betweens form steps.
 * It accepts one parameter. That is - step number.
 */
const navigateToFormStep = (stepNumber) => {
    /**
     * Hide all form steps.
     */
    document.querySelectorAll(".form-step").forEach((formStepElement) => {
        formStepElement.classList.add("d-none");
    });
    /**
     * Mark all form steps as unfinished.
     */
    document.querySelectorAll(".form-stepper-list").forEach((formStepHeader) => {
        formStepHeader.classList.add("form-stepper-unfinished");
        formStepHeader.classList.remove("form-stepper-active", "form-stepper-completed");
    });
    /**
     * Show the current form step (as passed to the function).
     */
    document.querySelector("#step-" + stepNumber).classList.remove("d-none");
    /**
     * Select the form step circle (progress bar).
     */
    const formStepCircle = document.querySelector('li[step="' + stepNumber + '"]');
    /**
     * Mark the current form step as active.
     */
    formStepCircle.classList.remove("form-stepper-unfinished", "form-stepper-completed");
    formStepCircle.classList.add("form-stepper-active");
    /**
     * Loop through each form step circles.
     * This loop will continue up to the current step number.
     * Example: If the current step is 3,
     * then the loop will perform operations for step 1 and 2.
     */
    for (let index = 0; index < stepNumber; index++) {
        /**
         * Select the form step circle (progress bar).
         */
        const formStepCircle = document.querySelector('li[step="' + index + '"]');
        /**
         * Check if the element exist. If yes, then proceed.
         */
        if (formStepCircle) {
            /**
             * Mark the form step as completed.
             */
            formStepCircle.classList.remove("form-stepper-unfinished", "form-stepper-active");
            formStepCircle.classList.add("form-stepper-completed");
        }
    }
};
/**
 * Select all form navigation buttons, and loop through them.
 */
document.querySelectorAll(".btn-navigate-form-step").forEach((formNavigationBtn) => {
    /**
     * Add a click event listener to the button.
     */
    formNavigationBtn.addEventListener("click", () => {
        /**
         * Get the value of the step.
         */
        const stepNumber = parseInt(formNavigationBtn.getAttribute("step_number"));
        /**
         * Call the function to navigate to the target form step.
         */
        navigateToFormStep(stepNumber);
    });
});