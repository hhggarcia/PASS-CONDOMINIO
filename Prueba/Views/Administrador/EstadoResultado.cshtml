@using Prueba.ViewModels

@model EstadoResultadoVM

@{
    ViewData["Title"] = "Estado de Resultado";
    Layout = "~/Views/Shared/_LayoutAdministrador.cshtml";
}

<div class="container-fluid">

    <div class="d-sm-flex align-items-center justify-content-around mb-4">
        <a type="button" id="create_pdf" value="Generate PDF" href="#" class="d-sm-inline-block btn btn-sm btn-danger shadow-sm">
            <i class="fas fa-download fa-sm text-white-50"></i> Generar
            PDF
        </a>
    </div>

    <!-- Content Row -->
    <div class="row">
        <div class="col-lg-12">
            <!-- Default Card Example -->
            <div class="card shadow mb-4 bg-content-bg">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        Estado de Resultado. Ingresos vs Egresos
                    </h6>
                </div>
                <div class="card-body">
                    <div class="form form-horizontal">
                        <div class="form-body">
                            <div class="row">

                                <div class="col-md-12">
                                    <div class="card-body">
                                        <div class="table-responsive text-center pb-3">
                                            <table class="table mb-0">
                                                <thead>
                                                    <tr class="tr_s">
                                                        <th class="text-danger">Total Egresos: @(Model.TotalEgresos.ToString("N"))</th>
                                                        <th class="text-success">Total Ingresos: @(Model.TotalIngresos.ToString("N"))</th>
                                                        <th>Diferencia: @(Model.Difenrencia.ToString("N"))</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>

                                        <h4>Ingresos</h4>
                                        @if (Model.AsientosIngresos != null && Model.AsientosIngresos.Any()
                                        && Model.AsientosCondominio != null && Model.AsientosCondominio.Any()
                                        && Model.SubCuentas != null && Model.SubCuentas.Any()
                                        && Model.Cuentas != null && Model.Cuentas.Any()
                                        && Model.Grupos != null && Model.Grupos.Any()
                                        && Model.Clases != null && Model.Clases.Any()
                                        )
                                        {
                                            <div class="table-responsive">
                                                <table class="text-center table table-bordered"
                                                   @*id="dataTable"*@
                                                   width="100%"
                                                   cellspacing="0">
                                                    <thead>
                                                        <tr>
                                                            <th>Código</th>
                                                            <th>Descripción</th>
                                                            <th>Concepto</th>
                                                            <th></th>
                                                            <th></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var ingreso in Model.AsientosIngresos)
                                                        {
                                                            var asiento = Model.AsientosCondominio.Where(c => c.IdAsiento == ingreso.IdAsiento).ToList();
                                                            var subcuenta = Model.SubCuentas.Where(c => c.Id == asiento.First().IdCodCuenta).ToList();
                                                            var cuenta = Model.Cuentas.Where(c => c.Id == subcuenta.First().IdCuenta).ToList();
                                                            var grupo = Model.Grupos.Where(c => c.Id == cuenta.First().IdGrupo).ToList();
                                                            var clase = Model.Clases.Where(c => c.Id == grupo.First().IdClase).ToList();

                                                            <tr class="tr_s">
                                                                <td>@(clase.First().Codigo + "." + grupo.First().Codigo + "." + cuenta.First().Codigo + "." + subcuenta.First().Codigo)</td>
                                                                <td class="text-bold-500">@subcuenta.First().Descricion</td>
                                                                <td class="text-bold-500">@asiento.First().Concepto</td>
                                                                <td class="text-bold-500">@asiento.First().Monto.ToString("N")</td>
                                                                <td></td>
                                                            </tr>

                                                        }
                                                        <tr class="tr_s">
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td>Total Ingresos: @Model.TotalIngresos.ToString("N")</td>
                                                        </tr>
                                                    </tbody>
                                                </table>

                                            </div>

                                        }
                                        else
                                        {
                                            <p>No hay Ingresos</p>
                                        }

                                    </div>

                                    <div class="card-body">
                                        <h4>Egresos</h4>
                                        @if (Model.AsientosEgresos != null && Model.AsientosEgresos.Any()
                                        && Model.AsientosCondominio != null && Model.AsientosCondominio.Any()
                                        && Model.SubCuentas != null && Model.SubCuentas.Any()
                                        && Model.Cuentas != null && Model.Cuentas.Any()
                                        && Model.Grupos != null && Model.Grupos.Any()
                                        && Model.Clases != null && Model.Clases.Any()
                                        )
                                        {
                                            <div class="table-responsive">
                                                <table class="text-center table table-bordered form"
                                                   @*id="dataTable"*@
                                                   width="100%"
                                                   cellspacing="0">
                                                    <thead>
                                                        <tr>
                                                            <th>Código</th>
                                                            <th>Descripción</th>
                                                            <th>Concepto</th>
                                                            <th></th>
                                                            <th></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var egreso in Model.AsientosEgresos)
                                                        {
                                                            var asiento = Model.AsientosCondominio.Where(c => c.IdAsiento == egreso.IdAsiento).ToList();
                                                            var subcuenta = Model.SubCuentas.Where(c => c.Id == asiento.First().IdCodCuenta).ToList();
                                                            var cuenta = Model.Cuentas.Where(c => c.Id == subcuenta.First().IdCuenta).ToList();
                                                            var grupo = Model.Grupos.Where(c => c.Id == cuenta.First().IdGrupo).ToList();
                                                            var clase = Model.Clases.Where(c => c.Id == grupo.First().IdClase).ToList();

                                                            <tr class="tr_s">
                                                                <td>@(clase.First().Codigo + "." + grupo.First().Codigo + "." + cuenta.First().Codigo + "." + subcuenta.First().Codigo)</td>
                                                                <td class="text-bold-500">@subcuenta.First().Descricion</td>
                                                                <td class="text-bold-500">@asiento.First().Concepto</td>
                                                                <td class="text-bold-500">@asiento.First().Monto.ToString("N")</td>
                                                                <td></td>
                                                            </tr>

                                                        }
                                                        <tr class="tr_s">
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td>Total Egresos: @Model.TotalEgresos.ToString("N")</td>
                                                        </tr>
                                                    </tbody>
                                                </table>

                                            </div>

                                        }
                                        else
                                        {
                                            <p>No hay Egresos</p>
                                        }

                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*PDF Configuración*@
<script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.5/jspdf.min.js"></script>
<script>
    (function () {
        var
            form = $('.form'),
            cache_width = form.width(),
            a3 = [820, 897]; // for a4 size paper width and height
        //  a4 = [595.28, 841.89];
        // Tamaños Hojas y tamaño alto y ancho del contenido


        $('#create_pdf').on('click', function () {
            $('body').scrollTop(0);
            createPDF();
        });
        //create pdf
        function createPDF() {
            getCanvas().then(function (canvas) {
                var
                    img = canvas.toDataURL("image/png"),
                    doc = new jsPDF({
                        unit: 'px',
                        format: 'a3'
                    });

                doc.setFontSize(22)
                doc.text(20, 40, 'Estado de Resultado. Ingresos vs Egresos')
                doc.setLineWidth(0.9)
                doc.line(20, 45, 80, 45)


                doc.addImage(img, 'JPEG', 20, 60); // xx Margen left, xx Margen Top
                // Nombre documento
                doc.save('Estado-Resultado.pdf');
                form.width(cache_width);
            });
        }



        // create canvas object
        function getCanvas() {
            form.width((a3[0] * 1.33333) - 80).css('max-width', 'none');
            return html2canvas(form, {
                imageTimeout: 2000,
                removeContainer: true
            });
        }

    }());
</script>
<script>
    (function ($) {
        $.fn.html2canvas = function (options) {
            var date = new Date(),
                $message = null,
                timeoutTimer = false,
                timer = date.getTime();
            html2canvas.logging = options && options.logging;
            html2canvas.Preload(this[0], $.extend({
                complete: function (images) {
                    var queue = html2canvas.Parse(this[0], images, options),
                        $canvas = $(html2canvas.Renderer(queue, options)),
                        finishTime = new Date();

                    $canvas.css({ position: 'absolute', left: 0, top: 0 }).appendTo(document.body);
                    $canvas.siblings().toggle();

                    $(window).click(function () {
                        if (!$canvas.is(':visible')) {
                            $canvas.toggle().siblings().toggle();
                            throwMessage("Canvas Render visible");
                        } else {
                            $canvas.siblings().toggle();
                            $canvas.toggle();
                            throwMessage("Canvas Render hidden");
                        }
                    });
                    throwMessage('Screenshot created in ' + ((finishTime.getTime() - timer) / 1000) + " seconds<br />", 4000);
                }
            }, options));

            function throwMessage(msg, duration) {
                window.clearTimeout(timeoutTimer);
                timeoutTimer = window.setTimeout(function () {
                    $message.fadeOut(function () {
                        $message.remove();
                    });
                }, duration || 2000);
                if ($message)
                    $message.remove();
                $message = $('<div ></div>').html(msg).css({
                    margin: 0,
                    padding: 10,
                    //background: "#000",
                    //opacity: 0.7,
                    position: "fixed",
                    top: 10,
                    right: 10,
                    fontFamily: 'Tahoma',
                    //color: '#fff',
                    fontSize: 12,
                    borderRadius: 12,
                    width: 'auto',
                    height: 'auto',
                    textAlign: 'center',
                    textDecoration: 'none'
                }).hide().fadeIn().appendTo('body');
            }
        };
    })(jQuery);

</script>
