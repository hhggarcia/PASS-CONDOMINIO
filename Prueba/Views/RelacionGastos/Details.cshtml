@model Prueba.Models.RelacionDeGastosVM

@{
    ViewData["Title"] = "Detalles";
    Layout = "~/Views/Shared/_LayoutAdministrador.cshtml";
}



<div class="container-fluid">
    <div class="d-sm-flex align-items-end justify-content-between mb-4">
        <a class="btn btn-light mb-3" asp-action="Index">Volver</a>

    </div>

    <div class="d-sm-flex align-items-center justify-content-around mb-4">
        <a type="button" id="create_pdf" value="Generate PDF" href="#" class="d-sm-inline-block btn btn-sm btn-danger shadow-sm">
            <i class="fas fa-download fa-sm text-white-50"></i> Generar
            PDF
        </a>
        <a value="Export" onclick="fnExcelReport();" class="d-sm-inline-block btn btn-sm btn-success shadow-sm">
            <i class="fas fa-download fa-sm text-white-50"></i> Generar
            Excel
        </a>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <!-- Default Card Example -->
            <div class="card shadow mb-4 bg-content-bg">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        Detalles relación de Gastos.
                    </h6>
                </div>
                <div class="card-body">
                    <div class="form form-horizontal">
                        <div class="form-body">
                            @*<div class="row">
                            <hr />
                            <dl class="row">
                            <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => model.SubTotal)
                            </dt>
                            <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.SubTotal)
                            </dd>
                            <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => model.TotalMensual)
                            </dt>
                            <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.TotalMensual)
                            </dd>
                            <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => model.Fecha)
                            </dt>
                            <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Fecha)
                            </dd>
                            <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => model.IdCondominioNavigation)
                            </dt>
                            <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.IdCondominioNavigation.IdCondominio)
                            </dd>
                            </dl>

                            </div>*@
                            <partial name="_DetalleRelacionGasto" model="Model" />

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*PDF Configuración*@
<script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.5/jspdf.min.js"></script>
<script>
    (function () {
        var
            form = $('.form'),
            cache_width = form.width(),
            a3 = [820, 897]; // for a4 size paper width and height
        //  a4 = [595.28, 841.89];
        // Tamaños Hojas y tamaño alto y ancho del contenido


        $('#create_pdf').on('click', function () {
            $('body').scrollTop(0);
            createPDF();
        });
        //create pdf
        function createPDF() {
            getCanvas().then(function (canvas) {
                var
                    img = canvas.toDataURL("image/png"),
                    doc = new jsPDF({
                        unit: 'px',
                        format: 'a3'
                    });

                doc.setFontSize(22)
                doc.text(20, 40, 'Detalle de Relación Gastos')
                doc.setLineWidth(0.7)
                doc.line(20, 45, 80, 45)


                doc.addImage(img, 'JPEG', 20, 60); // xx Margen left, xx Margen Top
                // Nombre documento
                doc.save('Detalle-Relación-de-Gastos.pdf');
                form.width(cache_width);
            });
        }



        // create canvas object
        function getCanvas() {
            form.width((a3[0] * 1.33333) - 80).css('max-width', 'none');
            return html2canvas(form, {
                imageTimeout: 2000,
                removeContainer: true
            });
        }

    }());
</script>
<script>
    (function ($) {
        $.fn.html2canvas = function (options) {
            var date = new Date(),
                $message = null,
                timeoutTimer = false,
                timer = date.getTime();
            html2canvas.logging = options && options.logging;
            html2canvas.Preload(this[0], $.extend({
                complete: function (images) {
                    var queue = html2canvas.Parse(this[0], images, options),
                        $canvas = $(html2canvas.Renderer(queue, options)),
                        finishTime = new Date();

                    $canvas.css({ position: 'absolute', left: 0, top: 0 }).appendTo(document.body);
                    $canvas.siblings().toggle();

                    $(window).click(function () {
                        if (!$canvas.is(':visible')) {
                            $canvas.toggle().siblings().toggle();
                            throwMessage("Canvas Render visible");
                        } else {
                            $canvas.siblings().toggle();
                            $canvas.toggle();
                            throwMessage("Canvas Render hidden");
                        }
                    });
                    throwMessage('Screenshot created in ' + ((finishTime.getTime() - timer) / 1000) + " seconds<br />", 4000);
                }
            }, options));

            function throwMessage(msg, duration) {
                window.clearTimeout(timeoutTimer);
                timeoutTimer = window.setTimeout(function () {
                    $message.fadeOut(function () {
                        $message.remove();
                    });
                }, duration || 2000);
                if ($message)
                    $message.remove();
                $message = $('<div ></div>').html(msg).css({
                    margin: 0,
                    padding: 10,
                    //background: "#000",
                    //opacity: 0.7,
                    position: "fixed",
                    top: 10,
                    right: 10,
                    fontFamily: 'Tahoma',
                    //color: '#fff',
                    fontSize: 12,
                    borderRadius: 12,
                    width: 'auto',
                    height: 'auto',
                    textAlign: 'center',
                    textDecoration: 'none'
                }).hide().fadeIn().appendTo('body');
            }
        };
    })(jQuery);

</script>


@section scripts{
    <script>
        function fnExcelReport() {
            var tab_text = "<table border='2px'><tr bgcolor='#87AFC6'>";
            var textRange; var j = 0;
            tab = document.getElementById('dataTable'); // id of table

            for (j = 0; j < tab.rows.length; j++) {
                tab_text = tab_text + tab.rows[j].innerHTML + "</tr>";
            }

            tab_text = tab_text + "</table>";
            tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, "");//remove if u want links in your table
            tab_text = tab_text.replace(/<img[^>]*>/gi, ""); // remove if u want images in your table
            tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, ""); // reomves input params

            var ua = window.navigator.userAgent;
            var msie = ua.indexOf("MSIE ");

            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
            {
                txtArea1.document.open("txt/html", "replace");
                txtArea1.document.write(tab_text);
                txtArea1.document.close();
                txtArea1.focus();
                sa = txtArea1.document.execCommand("SaveAs", true, "Recibos.xls");
            }
            else                 //other browser not tested on IE 11
                sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));

            return (sa);
        }
    </script>
}
